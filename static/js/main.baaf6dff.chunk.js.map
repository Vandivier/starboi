{"version":3,"sources":["logo.svg","customTypes/Anecdote.ts","pages/page-anecdotes/PageAnecdotes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["EMPTY_ANECDOTE","name","date","employer","notes","situation","obstacle","task","action","result","importedAnecdotes","anecdotesToType","AnecdoteCard","anecdote","className","AnecdoteCardSection","anecdotes","andecdoteSectionRef","ref","contentEditable","map","a","JSON","stringify","generateUniqueKey","ButtonSection","setAnecdotes","downloadAnecdoteJson","data","updateAnecdoteState","fileName","Date","getTime","json","blob","Blob","type","URL","createObjectURL","href","link","document","createElement","download","body","appendChild","click","removeChild","current","anecdoteHeadings","HTMLElement","Array","from","getElementsByTagName","length","newAnecdotes","headings","parsedAnecdotes","heading","elCard","parentElement","console","log","errorMessage","newAnecdote","textContent","getElementsByClassName","push","parseAnecdotesByHeadings","handleChangeImportAnecdotes","evOnChange","reader","FileReader","onload","evOnload","target","parsed","parse","files","readAsText","onClick","ev","concat","htmlFor","id","onChange","PageAnecdotes","React","useState","useRef","App","src","logo","alt","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.baaf6dff.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const EMPTY_ANECDOTE = {\r\n  name: \"\",\r\n  date: \"\",\r\n  employer: \"\",\r\n  notes: \"\",\r\n  situation: \"\",\r\n  obstacle: \"\",\r\n  task: \"\",\r\n  action: \"\",\r\n  result: \"\",\r\n};\r\n\r\nexport type Anecdote = typeof EMPTY_ANECDOTE;\r\n","import \"./PageAnecdotes.css\";\r\n\r\nimport React from \"react\"; // TODO: line needed?\r\n\r\nimport { Anecdote, EMPTY_ANECDOTE } from \"../../customTypes/Anecdote\";\r\nimport anecdotesToType from \"./anecdotes.json\";\r\n\r\nconst importedAnecdotes: Anecdote[] = anecdotesToType;\r\n\r\nconst generateUniqueKey = (a: Anecdote) => JSON.stringify(a);\r\n\r\ntype AnecdoteCardProps = {\r\n  anecdote: Anecdote;\r\n};\r\n\r\ntype ButtonSectionProps = {\r\n  anecdotes: Anecdote[];\r\n  andecdoteSectionRef: React.RefObject<HTMLElement>;\r\n  setAnecdotes: React.Dispatch<React.SetStateAction<Anecdote[]>>;\r\n};\r\n\r\ntype AnecdoteCardSectionProps = {\r\n  anecdotes: Anecdote[];\r\n  andecdoteSectionRef: React.RefObject<HTMLElement>;\r\n};\r\n\r\nconst AnecdoteCard = ({ anecdote }: AnecdoteCardProps) => (\r\n  <div className=\"anecdote-card\">\r\n    <h3>{anecdote.name}</h3>\r\n    <p className=\"anecdote-date\">{anecdote.date}</p>\r\n    <ol>\r\n      <li>\r\n        Employer: <span className=\"anecdote-employer\">{anecdote.employer}</span>\r\n      </li>\r\n      <li>\r\n        Situation:{\" \"}\r\n        <span className=\"anecdote-situation\">{anecdote.situation}</span>\r\n      </li>\r\n      <li>\r\n        Obstacle: <span className=\"anecdote-obstacle\">{anecdote.obstacle}</span>\r\n      </li>\r\n      <li>\r\n        Task: <span className=\"anecdote-task\">{anecdote.task}</span>\r\n      </li>\r\n      <li>\r\n        Action: <span className=\"anecdote-action\">{anecdote.action}</span>\r\n      </li>\r\n      <li>\r\n        Result: <span className=\"anecdote-result\">{anecdote.result}</span>\r\n      </li>\r\n    </ol>\r\n    <p>\r\n      Notes: <span className=\"anecdote-notes\">{anecdote.notes || \"N/A\"}</span>\r\n    </p>\r\n  </div>\r\n);\r\n\r\nconst parseAnecdotesByHeadings = (\r\n  headings: HTMLHeadingElement[]\r\n): Anecdote[] => {\r\n  const parsedAnecdotes: Anecdote[] = [];\r\n\r\n  for (const heading of headings) {\r\n    const elCard = heading.parentElement;\r\n\r\n    if (elCard === null) {\r\n      console.log({ errorMessage: \"unexpected null elCard\" });\r\n      return [];\r\n    }\r\n\r\n    const newAnecdote = {\r\n      name: heading.textContent || \"\",\r\n      date:\r\n        elCard.getElementsByClassName(\"anecdote-date\")[0]?.textContent || \"\",\r\n      employer:\r\n        elCard.getElementsByClassName(\"anecdote-employer\")[0]?.textContent ||\r\n        \"\",\r\n      situation:\r\n        elCard.getElementsByClassName(\"anecdote-situation\")[0]?.textContent ||\r\n        \"\",\r\n      obstacle:\r\n        elCard.getElementsByClassName(\"anecdote-obstacle\")[0]?.textContent ||\r\n        \"\",\r\n      task:\r\n        elCard.getElementsByClassName(\"anecdote-task\")[0]?.textContent || \"\",\r\n      action:\r\n        elCard.getElementsByClassName(\"anecdote-action\")[0]?.textContent || \"\",\r\n      result:\r\n        elCard.getElementsByClassName(\"anecdote-result\")[0]?.textContent || \"\",\r\n      notes:\r\n        elCard.getElementsByClassName(\"anecdote-notes\")[0]?.textContent || \"\",\r\n    };\r\n\r\n    parsedAnecdotes.push(newAnecdote);\r\n  }\r\n\r\n  return parsedAnecdotes;\r\n};\r\n\r\nconst AnecdoteCardSection = ({\r\n  anecdotes,\r\n  andecdoteSectionRef,\r\n}: AnecdoteCardSectionProps) => {\r\n  return (\r\n    <section\r\n      ref={andecdoteSectionRef}\r\n      className=\"anecdote-card-section\"\r\n      contentEditable\r\n    >\r\n      {anecdotes.map((a) => (\r\n        <AnecdoteCard anecdote={a} key={generateUniqueKey(a)} />\r\n      ))}\r\n    </section>\r\n  );\r\n};\r\n\r\n// TODO: compare to Rockstarboi, who uses Material <Button />\r\nconst ButtonSection = ({\r\n  anecdotes,\r\n  andecdoteSectionRef,\r\n  setAnecdotes,\r\n}: ButtonSectionProps) => {\r\n  const downloadAnecdoteJson = async () => {\r\n    const data = updateAnecdoteState();\r\n    const fileName = `anecdotes-${new Date().getTime()}`;\r\n    const json = JSON.stringify(data);\r\n    const blob = new Blob([json], { type: \"application/json\" });\r\n    const href = await URL.createObjectURL(blob);\r\n    const link = document.createElement(\"a\");\r\n\r\n    link.href = href;\r\n    link.download = fileName + \".json\";\r\n\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  // note: this whole dom parsing thing is basically an anti-pattern\r\n  const updateAnecdoteState = () => {\r\n    const result = andecdoteSectionRef.current;\r\n    const anecdoteHeadings =\r\n      result instanceof HTMLElement\r\n        ? Array.from(result.getElementsByTagName(\"h3\"))\r\n        : [];\r\n\r\n    if (anecdoteHeadings.length) {\r\n      const newAnecdotes = parseAnecdotesByHeadings(anecdoteHeadings);\r\n      setAnecdotes(newAnecdotes);\r\n      return newAnecdotes;\r\n    } else {\r\n      setAnecdotes([]);\r\n    }\r\n  };\r\n\r\n  const handleClickAddAnecdote = (\r\n    ev: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ) => {\r\n    setAnecdotes([{ ...EMPTY_ANECDOTE }].concat(anecdotes));\r\n  };\r\n\r\n  const handleChangeImportAnecdotes = async (\r\n    evOnChange: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    updateAnecdoteState();\r\n    const reader = new FileReader();\r\n\r\n    // note: this will not trigger if u re-load the same file twice in a row\r\n    //   this seems to be a browser constraint, not a React thing.\r\n    reader.onload = async (evOnload) => {\r\n      const json = evOnload.target?.result;\r\n      const parsed = typeof json === \"string\" ? JSON.parse(json) : null;\r\n\r\n      if (parsed) {\r\n        setAnecdotes(parsed);\r\n      }\r\n    };\r\n\r\n    if (evOnChange?.target?.files?.length) {\r\n      reader.readAsText(evOnChange.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const handleClickExportAnecdotes = () => {\r\n    downloadAnecdoteJson();\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <button className=\"buttonlike\" onClick={handleClickAddAnecdote}>\r\n        Add Anecdote\r\n      </button>\r\n      <label className=\"buttonlike\" htmlFor=\"import-anecdote-input\">\r\n        Import Anecdote JSON\r\n        <input\r\n          id=\"import-anecdote-input\"\r\n          onChange={handleChangeImportAnecdotes}\r\n          onClick={updateAnecdoteState}\r\n          type=\"file\"\r\n        />\r\n      </label>\r\n      <button className=\"buttonlike\" onClick={handleClickExportAnecdotes}>\r\n        Export Anecdote JSON\r\n      </button>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport const PageAnecdotes = () => {\r\n  const [anecdotes, setAnecdotes] = React.useState(importedAnecdotes);\r\n  const andecdoteSectionRef = React.useRef(null);\r\n\r\n  return (\r\n    <>\r\n      <ButtonSection\r\n        anecdotes={anecdotes}\r\n        andecdoteSectionRef={andecdoteSectionRef}\r\n        setAnecdotes={setAnecdotes}\r\n      />\r\n      {anecdotes.length ? (\r\n        <AnecdoteCardSection\r\n          anecdotes={anecdotes}\r\n          andecdoteSectionRef={andecdoteSectionRef}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n","import \"./App.css\";\n\nimport React from \"react\"; // TODO: line needed?\n\nimport logo from \"./logo.svg\";\nimport { PageAnecdotes } from \"./pages/page-anecdotes/PageAnecdotes\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h1>Starboi Anecdote Organizer</h1>\n        <a\n          className=\"App-link\"\n          href=\"https://www.amazon.jobs/en/landing_pages/in-person-interview\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn the STAR method\n        </a>\n      </header>\n      <PageAnecdotes />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}